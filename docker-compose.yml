
services:
  postgres_report_db: 
    image: postgres:latest
    container_name: postgres_report_db
    restart: always
    networks:
      - drawresult_network
    ports: 
      - "5537:5432"
    environment:
      POSTGRES_USER: LOTTO_DB
      POSTGRES_PASSWORD: LOTTO_DB
      POSTGRES_DB: LOTTO_DB
    volumes:
     - pg_data:/var/lib/postgresql/pg_data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U LOTTO_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_grafana_db: 
    image: postgres:latest
    container_name: postgres_grafana_db
    restart: always
    networks:
      - drawresult_network
    ports: 
      - "5538:5432"
    environment:
      POSTGRES_USER: GRAFANA_DB
      POSTGRES_PASSWORD: GRAFANA_DB
      POSTGRES_DB: GRAFANA_DB
    volumes:
     - pg_data:/var/lib/postgresql/pg_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U GRAFANA_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
      
  postgres_dagster_db: 
    image: postgres:latest
    container_name: postgres_dagster_db
    restart: always
    networks:
      - drawresult_network
    ports: 
      - "5539:5432"
    environment:
      POSTGRES_USER: DAGSTER_DB
      POSTGRES_PASSWORD: DAGSTER_DB
      POSTGRES_DB: DAGSTER_DB
    volumes:
     - pg_data:/var/lib/postgresql/pg_data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U DAGSTER_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana_ui:
    image: grafana/grafana:10.4.2
    container_name: grafana_ui
    restart: always
    command: ["uv", "run", "dagster-daemon", "run"]
    networks:
      - drawresult_network
    ports:
      - 3000:3000
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres_grafana_db
      GF_DATABASE_PORT: 5538
      GF_DATABASE_NAME: GRAFANA_DB
      GF_DATABASE_USER: GRAFANA_DB
      GF_DATABASE_PASSWORD: GRAFANA_DB
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      postgres_report_db:
        condition: service_healthy
      postgres_grafana_db:
        condition: service_healthy

  dagster_web:
    build:
      dockerfile: src/lotto_project/Dockerfile
    container_name: dagster_web
    restart: always
    command: ["uv", "run", "dagster-webserver", "-h", "0.0.0.0", "-p", "3000"]
    ports:
      - "3001:3000"
    networks:
      - drawresult_network
    environment:
      DAGSTER_POSTGRES_HOST: postgres_dagster_db
      DAGSTER_POSTGRES_USER: DAGSTER_DB
      DAGSTER_POSTGRES_PASSWORD: DAGSTER_DB
      DAGSTER_POSTGRES_DB: DAGSTER_DB
      DAGSTER_HOME: /opt/dagster/dagster_home
      DAGSTER_POSTGRES_PORT: 5539
    volumes:
      - .src:/app/dagster
      - ./dagster_home:/opt/dagster/dagster_home
    depends_on:
      postgres_dagster_db:
        condition: service_healthy

    
  dagster_daemon:
    build:
      dockerfile: src/lotto_project/Dockerfile
    container_name: dagster_daemon
    
    network_mode: host
    environment:
      DAGSTER_POSTGRES_HOST: postgres_dagster_db
      DAGSTER_POSTGRES_USER: DAGSTER_DB
      DAGSTER_POSTGRES_PASSWORD: DAGSTER_DB
      DAGSTER_POSTGRES_DB: DAGSTER_DB
      DAGSTER_HOME: /opt/dagster/dagster_home
      DAGSTER_POSTGRES_PORT: 5539
    volumes:
      - .src:/app/dagster
      - ./dagster_home:/opt/dagster/dagster_home
    depends_on:
      postgres_dagster_db:
        condition: service_healthy
volumes:
  postgres_dagster_db: 
  pg_data:
  postgres_grafana_db: 
  postgres_report_db:

networks:
  drawresult_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/24